{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifinderApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","placeholder","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","gif","key","GifinderApp","categories","style","display","flexDirection","alignItems","justifyContent","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,YAAY,2BACZC,SAnBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOH,YCLdI,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATnB,kBAaZY,GAbY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRlB,EAAQC,GAELkB,MAAK,SAACC,GACLH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGd,CAACd,IAEGe,EDd0BK,CAAcpB,GAAlCW,EAF0B,EAE/BL,KAAaQ,EAFkB,EAElBA,QAErB,OACE,oCACE,4BAAKd,GACHc,GAAW,0CAEb,yBAAKlB,UAAU,aACZe,EAAOH,KAAI,SAACa,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAIX,IAAQW,U,MEczBE,MAvBf,WAAwB,IAAD,EACe5C,mBAAS,IADxB,mBACd6C,EADc,KACF9C,EADE,KAGrB,OACE,oCACE,yBAAK+C,MAAO,CAACC,QAAS,OAAQC,cAAc,MAAMC,WAAY,SAAUC,eAAe,WACrF,yCAGF,kBAAC,EAAD,CAAanD,cAAeA,IAC5B,6BAEA,4BACG8C,EAAWhB,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASsB,IAAKtB,EAAUA,SAAUA,U,MCf5C8B,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.090d3d84.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((cat) => [inputValue, ...cat]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\"\n        value={inputValue} \n        placeholder=\"Buscate un gif copado...\"\n        onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","export const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&api_key=37bzXvSB2px28Mlhn02EQtcE5vUFnI5H&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n\n    return gifs;\n  };","import React from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n\n  const { data:images ,loading } = useFetchGifs( category );\n\n  return ( \n    <>\n      <h3>{category}</h3>\n      { loading && <p>Cargando...</p> }\n\n      <div className=\"card-grid\">\n        {images.map((gif) => (\n          <GifGridItem key={gif.id} {...gif} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category)\n      //.then( img => setImages(img)) = .then(setImages);\n      .then((imgs) => {\n        setState({\n          data: imgs,\n          loading: false,\n        }); \n      });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\nimport { DayAndNight } from \"./components/switch/DayAndNight\";\n\nfunction GifinderApp() {\n  const [categories, setCategories] = useState([]);\n    \n  return (\n    <>\n      <div style={{display: \"flex\", flexDirection:\"row\",alignItems: \"center\", justifyContent:\"center\"}}>\n        <h2>Gifinder</h2>\n        {/* <DayAndNight /> */}\n      </div>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n}\n\n// GifinderApp.propTypes = {};\n\nexport default GifinderApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifinderApp from \"./GifinderApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifinderApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}